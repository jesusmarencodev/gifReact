{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGifs.js","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gift","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","defaultCategories","categories","process","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAoB/C,OACC,0BAAMC,SAXc,SAACC,GACrBA,EAAEC,iBACFC,QAAQC,IAAI,yBACTN,EAAWO,OAAOC,OAAS,IAC7BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,OAOd,2BAAID,GACJ,2BACCU,KAAK,OACLC,MAAQX,EACRY,SAtBuB,SAACT,GAE1BF,EAAcE,EAAEU,OAAOF,OACvBN,QAAQC,IAAI,kCCNDQ,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACnC,OACC,yBAAKC,UAAU,0CACd,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCRMK,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACjBN,EADiB,kDAC+BO,UAAUF,GADzC,+DAEJG,MAAMR,GAFF,cAEjBS,EAFiB,gBAGAA,EAAKC,OAHL,uBAGfC,EAHe,EAGfA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNC,GAAKD,EAAIC,GACThB,MAAQe,EAAIf,MACZC,IAAG,UAAGc,EAAIE,cAAP,aAAG,EAAYC,iBAAiBjB,QATd,kBAahBY,GAbgB,4CAAH,sDCKRM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACftB,mBAAS,CAClC4B,KAAO,GACPQ,SAAU,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAkBzC,OAZAC,qBAAU,WACRlB,EAASC,GACPkB,MAAM,SAAAC,GACNH,EAAS,CACRV,KAAOa,EACPL,SAAU,SAGZ,CAACd,IAIGe,EDb0BK,CAAapB,GAAjCW,EAHyB,EAG9BL,KAAaQ,EAHiB,EAGjBA,QAErB,OACC,oCACC,4BAAKd,GACJc,GAAW,sCAEZ,yBAAKlB,UAAU,aAEZe,EAAOH,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eACCY,IAAQZ,EAAIC,IACRD,UEhBCa,EAAe,SAAC,GAA+B,IAAD,IAA5BC,yBAA4B,MAAR,GAAQ,IAItB7C,mBAAS6C,GAJa,mBAInDC,EAJmD,KAIvC/C,EAJuC,KAa1D,OACC,oCACC,4CACA,4BAAKgD,cACL,kBAAC,EAAD,CAAahD,cAAgBA,IAC7B,6BAEE+C,EAAWhB,KAAK,SAAAR,GAAQ,OACvB,kBAAC,EAAD,CACCqB,IAAKrB,EACLA,SAAUA,S,MCrBjB0B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.10ad1c63.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\t//setear con setState un string\r\n\t\tsetInputValue(e.target.value)\r\n\t\tconsole.log('handleInputChange llamado')\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('handlerSubmit llamado')\r\n\t\tif(inputValue.trim().length > 2) {\r\n\t\t\tsetCategories(cats => [inputValue, ...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<p>{inputValue}</p>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={ inputValue }\r\n\t\t\t\tonChange={ handleInputChange }\r\n\t\t\t/>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories : PropTypes.func.isRequired,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={url} alt={title}/>\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n\ttitle : PropTypes.string.isRequired,\r\n\turl   : PropTypes.string.isRequired,\r\n}\r\n","export const getGifts = async(category) => {\r\n\tconst url =` https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=9hK5ZW01CjEy0LeN0PiezJE6ZxgScQu0`;\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\t\r\n\tconst gift = data.map(img => {\r\n\t\treturn {\r\n\t\t\tid : img.id,\r\n\t\t\ttitle : img.title,\r\n\t\t\turl : img.images?.downsized_medium.url // este signo significa que si vienen las imagenes utilizalo sino no.\r\n\t\t}\r\n\t})\r\n\r\n\treturn gift;\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n\tconst { data:images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>{category}</h3>\r\n\t\t\t{loading && <p>Loading</p> }\r\n\t\t{\t\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\timages.map((img) =>(\r\n\t\t\t\t\t\t\t<GifGridItem\r\n\t\t\t\t\t\t\t\tkey = { img.id }\r\n\t\t\t\t\t\t\t\t{...img } //enviando por props el objeto completo y sis propiedades\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nGifGrid.propTypes = {\r\n\tcategory : PropTypes.string.isRequired,\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata : [],\r\n\t\tloading : true\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\t\tgetGifts(category)\r\n\t\t\t\t.then( imgs =>{\r\n\t\t\t\t\tsetState({\r\n\t\t\t\t\t\tdata : imgs,\r\n\t\t\t\t\t\tloading : false\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t}, [category])\r\n\r\n\r\n\r\n\treturn state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ({ defaultCategories = []}) => {\r\n\r\n\r\n\r\n\tconst [categories, setCategories] = useState(defaultCategories);\r\n\r\n/* \tconst handleAdd = () => {\r\n\t\t//formar de mutar con setState un arreglo\r\n\t\tsetCategories([...categories, 'Naruto']);\r\n\t\tsetCategories(['HunterXHunter', ...categories]);\r\n\t\tsetCategories(cats => [...cats, 'Inuyasha']);\r\n\t} */\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<h3>{process.env.REACT_APP_ENV}</h3>\r\n\t\t\t<AddCategory setCategories={ setCategories } />\r\n\t\t\t<hr/>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.map( category => (\r\n\t\t\t\t\t\t<GifGrid\r\n\t\t\t\t\t\t\tkey={category}\r\n\t\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) )\r\n\t\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}